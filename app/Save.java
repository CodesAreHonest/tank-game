/**
* @author (Shubar, Abduelhakem G Abdusalam)
* 
*   Save class is Model Class  updated by Controller class
*   -------------------------------------------------------
*   1.  This class save all the key and sequence typed by user and generated by computer
*   2.  This class save the file name base on the player name.
*          
*/




import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Scanner;
import java.io.*;
import java.io.IOException;

public class Save
{
    
    
    private ArrayList<String> comSequence; 
    private ArrayList<String> userSequence; 
    private FileWriter writer;
    private File reader;
    private String fileName;

    /**
     * @author(Shubar, Abduelhakem G Abdusalam) 
     *  
     *  When the Load constructor is called. 
     *      a. Two ArrayList is create in order to store the save sequence.
     */
    public Save()
    {
        userSequence = new ArrayList<String>(18);
        comSequence = new ArrayList<String>(18);
       
    }

    /**
     * @author(Shubar, Abduelhakem G Abdusalam) 
     *  
     *   This function is save the computer sequences
     */
    public void setSaveComSequence(ArrayList<String> sequenceToSave){
         for(String str : sequenceToSave){
           comSequence.add(str);
        }
    }
    
    /**
     * @author(Shubar, Abduelhakem G Abdusalam) 
     *  
     *   This function is save the user sequences
     */
    public void setSaveUserSequence(ArrayList<String> sequenceToSave){
         for(String str : sequenceToSave){
           userSequence.add(str);
        }
    }

    /**
     * @author(Shubar, Abduelhakem G Abdusalam) 
     *  
     *   This function is used to open the file and save 
     */
    public void saving()
    {
        
        try{
            writer = new FileWriter(fileName + ".txt");    
            
            for(String str: userSequence) {
                writer.write(str);
                writer.write("\n");
            }
            
            for(String str: comSequence) {
                writer.write(str);
                writer.write("\n");
            }
            writer.close();
       }catch(IOException e){
        e.printStackTrace();
       }

    }
    
    
    public void loading()
    {
         ArrayList<String> list;
        try{
           reader = new File("output1.txt");  
           Scanner scan = new Scanner(reader);
           list = new ArrayList<String>();
           while (scan.hasNext()){
           list.add(scan.next());
          }
          scan.close();
          for(int i = 0; i < 18; i++){
            System.out.println(list.get(i));
          }
        }
        
        catch(FileNotFoundException e) {
        
            if(!reader.exists()) {
                System.out.println("output does not exist!");
                System.exit(0);
            }
          
            if(reader.isDirectory()) {
                System.out.println("output  is a Directory!");
                System.exit(0);
            }

            if(!reader.canRead()) {
                System.out.println("output is not readable!");
                System.exit(0);
            }
        }
        
        

    }
    
    public void setFileName(String fileName){
        this.fileName = fileName;
    }
    
   
}


